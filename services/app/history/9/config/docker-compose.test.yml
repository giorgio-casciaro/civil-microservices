version:              '3.3'

services:
  portainer:
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /data/portainer:/data
    ports:
       - target:    9000
         published: 9000
         protocol:  tcp
         mode:      host
    deploy:
     placement:
       constraints: [node.role == manager]
     endpoint_mode: dnsrr
     replicas: 1

  influx:
    networks:
      - monitoring
    image: influxdb:alpine
    entrypoint: sh
    command: -c "$$(sleep 60 ; influx -execute=\"CREATE DATABASE cadvisor\"; echo 1) & influxd"
    volumes:
      - /data/influx:/var/lib/influxdb
    deploy:
      endpoint_mode: dnsrr
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  grafana:
    networks:
      - monitoring
    image: grafana/grafana
    ports:
       - target:    3000
         published: 3000
         protocol:  tcp
         mode:      host
    # ports:
    #   - 0.0.0.0:80:3000
    volumes:
      - /data/grafana:/var/lib/grafana
    depends_on:
      - influx
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  cadvisor:
    networks:
      - monitoring
    image: google/cadvisor
    hostname: '{{.Node.ID}}'
    command: -logtostderr -docker_only -storage_driver=influxdb -storage_driver_db=cadvisor -storage_driver_host=influx:8086
    volumes:
      - /hostname:/etc/machine-id
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - influx
    deploy:
      mode: global

  app:
    image:            giorgiocasciaro/civil-microservices-app:9
    command:          sh -c "npm run start"
    environment:
      netHost:        app
      schemaHost:     'http://schema:10000'
      aerospikeHosts: aerospike:3000
      # netCors:        http://localhost:82,http://127.0.0.1:82,http://localhost:8080,http://127.0.0.1:8080,http://localhost:10080,http://127.0.0.1:10080
      NODE_ENV:       test
    networks:
      - microservicesNet
      - aerospike
    deploy:
     # placement:
     #   constraints: [node.role == manager]
    #  mode: global
     endpoint_mode: dnsrr
     replicas: 1

networks:
  microservicesNet:
    driver:           overlay
  aerospike:
    driver:           overlay
  monitoring:
    driver:           overlay
